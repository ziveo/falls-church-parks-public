import{lh as a,a0 as m,a2 as l,bC as h}from"./index.a831a68c.js";import{n as p}from"./BitmapTileContainer.4aff8eeb.js";import{o as d}from"./BaseTileRenderer.f2aa3236.js";import"./Bitmap.f35df500.js";import"./utils.c5d68ceb.js";import"./Utils.52ce5732.js";import"./number.6e30c64a.js";import"./enums.c60b1dad.js";import"./Texture.799a4527.js";import"./VertexElementDescriptor.2400a91d.js";import"./MaterialKey.9bf60063.js";import"./alignmentUtils.84250e5d.js";import"./definitions.a48e52ac.js";import"./TileContainer.8cab8d8b.js";import"./WGLContainer.6c26f111.js";import"./pixelUtils.0c287117.js";import"./VertexArrayObject.47b5a963.js";import"./ProgramTemplate.30511351.js";import"./StyleDefinition.f1dd8ba9.js";import"./config.ded6d251.js";import"./GeometryUtils.b4d0dc88.js";class c{constructor(){this.gradient=null,this.height=512,this.width=512}render(i){a(i,512,this.intensities,this.gradient,this.minDensity,this.maxDensity)}}let o=class extends d{constructor(t){super(t),this._intensityInfo={minDensity:0,maxDensity:0},this.type="heatmap",this.featuresView={attributeView:{initialize:()=>{},requestUpdate:()=>{}},requestRender:()=>{}},this._container=new p(t.tileInfoView)}createTile(t){const i=this._container.createTile(t);return this.tileInfoView.getTileCoords(i.bitmap,t),i.bitmap.resolution=this.tileInfoView.getTileResolution(t),i}onConfigUpdate(){const t=this.layer.renderer;if(t.type==="heatmap"){const{minDensity:i,maxDensity:s,colorStops:n}=t;this._intensityInfo.minDensity=i,this._intensityInfo.maxDensity=s,this._gradient=h(n),this.tiles.forEach(r=>{const e=r.bitmap.source;e&&(e.minDensity=i,e.maxDensity=s,e.gradient=this._gradient,r.bitmap.invalidateTexture())})}}hitTest(){return Promise.resolve([])}install(t){t.addChild(this._container)}uninstall(t){this._container.removeAllChildren(),t.removeChild(this._container)}disposeTile(t){this._container.removeChild(t),t.destroy()}supportsRenderer(t){return t&&t.type==="heatmap"}onTileData(t){const i=this.tiles.get(t.tileKey);if(!i)return;const s=t.intensityInfo,{minDensity:n,maxDensity:r}=this._intensityInfo,e=i.bitmap.source||new c;e.intensities=s&&s.matrix||null,e.minDensity=n,e.maxDensity=r,e.gradient=this._gradient,i.bitmap.source=e,this._container.addChild(i),this._container.requestRender(),this.requestUpdate()}onTileError(t){console.error(t)}lockGPUUploads(){}unlockGPUUploads(){}fetchResource(t,i){return console.error(t),Promise.reject()}};o=m([l("esri.views.2d.layers.features.tileRenderers.HeatmapTileRenderer")],o);const G=o;export{G as default};
